{"name": "test_fill_and_submit_form", "status": "failed", "statusDetails": {"message": "Failed: Браузер закрылся: Alert Text: Message received!\nMessage: unexpected alert open: {Alert text : Message received!}\n  (Session info: chrome=140.0.7339.208)\nStacktrace:\n\tGetHandleVerifier [0x0xc2c333+65459]\n\tGetHandleVerifier [0x0xc2c374+65524]\n\t(No symbol) [0x0xa4d973]\n\t(No symbol) [0x0xadbe6c]\n\t(No symbol) [0x0xab9bf6]\n\t(No symbol) [0x0xa8b38e]\n\t(No symbol) [0x0xa8c274]\n\tGetHandleVerifier [0x0xeaeda3+2697763]\n\tGetHandleVerifier [0x0xea9ec7+2677575]\n\tGetHandleVerifier [0x0xc54194+228884]\n\tGetHandleVerifier [0x0xc449f8+165496]\n\tGetHandleVerifier [0x0xc4b18d+192013]\n\tGetHandleVerifier [0x0xc347d8+99416]\n\tGetHandleVerifier [0x0xc34972+99826]\n\tGetHandleVerifier [0x0xc1ebea+10346]\n\tBaseThreadInitThunk [0x0x7570fcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x7761809e+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x7761806e+238]", "trace": "self = <automation_project.tests.test_form.TestForm object at 0x0000020974ECD670>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"18c435ae3f3fb6ea98fc756cb5798809\")>\n\n    @allure.story(\"Fill and submit form\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_fill_and_submit_form(self, driver):\n        form_page = FormPage(driver)\n    \n        # Открываем страницу\n        result = form_page.open_form_page()\n        assert result is True, \"Страница не открылась\"\n    \n        # Проверяем, что драйвер еще жив\n        try:\n>           current_url = driver.current_url\n                          ^^^^^^^^^^^^^^^^^^\n\ntests\\test_form.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:587: in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020974F0F7A0>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"Message received!\"},\"error\":\"unexpected alert open\",\"message\":\"une...tRtlGetAppContainerNamedObjectPath [0x0x7761809e+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x7761806e+238]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: Message received!\nE           Message: unexpected alert open: {Alert text : Message received!}\nE             (Session info: chrome=140.0.7339.208)\nE           Stacktrace:\nE           \tGetHandleVerifier [0x0xc2c333+65459]\nE           \tGetHandleVerifier [0x0xc2c374+65524]\nE           \t(No symbol) [0x0xa4d973]\nE           \t(No symbol) [0x0xadbe6c]\nE           \t(No symbol) [0x0xab9bf6]\nE           \t(No symbol) [0x0xa8b38e]\nE           \t(No symbol) [0x0xa8c274]\nE           \tGetHandleVerifier [0x0xeaeda3+2697763]\nE           \tGetHandleVerifier [0x0xea9ec7+2677575]\nE           \tGetHandleVerifier [0x0xc54194+228884]\nE           \tGetHandleVerifier [0x0xc449f8+165496]\nE           \tGetHandleVerifier [0x0xc4b18d+192013]\nE           \tGetHandleVerifier [0x0xc347d8+99416]\nE           \tGetHandleVerifier [0x0xc34972+99826]\nE           \tGetHandleVerifier [0x0xc1ebea+10346]\nE           \tBaseThreadInitThunk [0x0x7570fcc9+25]\nE           \tRtlGetAppContainerNamedObjectPath [0x0x7761809e+286]\nE           \tRtlGetAppContainerNamedObjectPath [0x0x7761806e+238]\n\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:231: UnexpectedAlertPresentException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <automation_project.tests.test_form.TestForm object at 0x0000020974ECD670>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"18c435ae3f3fb6ea98fc756cb5798809\")>\n\n    @allure.story(\"Fill and submit form\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_fill_and_submit_form(self, driver):\n        form_page = FormPage(driver)\n    \n        # Открываем страницу\n        result = form_page.open_form_page()\n        assert result is True, \"Страница не открылась\"\n    \n        # Проверяем, что драйвер еще жив\n        try:\n            current_url = driver.current_url\n            print(f\"Current URL: {current_url}\")\n        except Exception as e:\n>           pytest.fail(f\"Браузер закрылся: {e}\") # type: ignore\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           Failed: Браузер закрылся: Alert Text: Message received!\nE           Message: unexpected alert open: {Alert text : Message received!}\nE             (Session info: chrome=140.0.7339.208)\nE           Stacktrace:\nE           \tGetHandleVerifier [0x0xc2c333+65459]\nE           \tGetHandleVerifier [0x0xc2c374+65524]\nE           \t(No symbol) [0x0xa4d973]\nE           \t(No symbol) [0x0xadbe6c]\nE           \t(No symbol) [0x0xab9bf6]\nE           \t(No symbol) [0x0xa8b38e]\nE           \t(No symbol) [0x0xa8c274]\nE           \tGetHandleVerifier [0x0xeaeda3+2697763]\nE           \tGetHandleVerifier [0x0xea9ec7+2677575]\nE           \tGetHandleVerifier [0x0xc54194+228884]\nE           \tGetHandleVerifier [0x0xc449f8+165496]\nE           \tGetHandleVerifier [0x0xc4b18d+192013]\nE           \tGetHandleVerifier [0x0xc347d8+99416]\nE           \tGetHandleVerifier [0x0xc34972+99826]\nE           \tGetHandleVerifier [0x0xc1ebea+10346]\nE           \tBaseThreadInitThunk [0x0x7570fcc9+25]\nE           \tRtlGetAppContainerNamedObjectPath [0x0x7761809e+286]\nE           \tRtlGetAppContainerNamedObjectPath [0x0x7761806e+238]\n\ntests\\test_form.py:26: Failed"}, "start": 1758999465090, "stop": 1758999468399, "uuid": "88b82eec-a4bd-45b9-8a9c-7bb98d497fb9", "historyId": "2650da391c980413bcdedeabba7a0a65", "testCaseId": "2650da391c980413bcdedeabba7a0a65", "fullName": "tests.test_form.TestForm#test_fill_and_submit_form", "labels": [{"name": "story", "value": "Fill and submit form"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "Form Page"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_form"}, {"name": "subSuite", "value": "TestForm"}, {"name": "host", "value": "MakuOSPC"}, {"name": "thread", "value": "37116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_form"}], "titlePath": ["tests", "test_form.py", "TestForm"]}